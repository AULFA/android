<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.nypl.simplified</groupId>
    <artifactId>simplified</artifactId>
    <version>0.3.11</version>
  </parent>
  <artifactId>simplified-documentation</artifactId>

  <packaging>jar</packaging>
  <name>simplified-documentation</name>
  <description>Simplified (Documentation)</description>
  <url>https://github.com/NYPL/Simplified-Android</url>

  <prerequisites>
    <maven>2.2.1</maven>
  </prerequisites>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <dependency>
      <groupId>com.io7m.jstructural</groupId>
      <artifactId>io7m-jstructural-tools</artifactId>
      <version>4.0.0</version>
    </dependency>

    <!-- Depend on the javadoc for each module, in order to aggregate it. -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>simplified-books-core</artifactId>
      <version>${project.version}</version>
      <classifier>javadoc</classifier>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>simplified-http-core</artifactId>
      <version>${project.version}</version>
      <classifier>javadoc</classifier>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>simplified-opds-core</artifactId>
      <version>${project.version}</version>
      <classifier>javadoc</classifier>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>simplified-app</artifactId>
      <version>${project.version}</version>
      <classifier>javadoc</classifier>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>android</groupId>
      <artifactId>android</artifactId>
      <version>${org.nypl.android.packageVersion}</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>android.support</groupId>
      <artifactId>compatibility-v13</artifactId>
      <version>${org.nypl.android.support-v13.packageVersion}</version>
      <optional>true</optional>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Produce custom manifest in jar files -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.6</version>
        <configuration>
          <archive>
            <manifestEntries>
              <Specification-Title>${project.name}</Specification-Title>
              <Specification-Version>${project.version}</Specification-Version>
              <Specification-Vendor>NYPL Labs</Specification-Vendor>
              <Implementation-Title>${project.name}</Implementation-Title>
              <Implementation-Version>${project.version}</Implementation-Version>
              <Implementation-Vendor>NYPL Labs</Implementation-Vendor>
              <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
              <Built-By>NYPL Labs</Built-By>
              <Sealed>true</Sealed>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <!-- Create source jar -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>jar-no-fork</goal>
              <goal>test-jar-no-fork</goal>
            </goals>
            <configuration>
              <archive>
                <manifestEntries>
                  <Specification-Title>${project.name}</Specification-Title>
                  <Specification-Version>${project.version}</Specification-Version>
                  <Specification-Vendor>NYPL Labs</Specification-Vendor>
                  <Implementation-Title>${project.name}</Implementation-Title>
                  <Implementation-Version>${project.version}</Implementation-Version>
                  <Implementation-Vendor>NYPL Labs</Implementation-Vendor>
                  <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                  <Built-By>NYPL Labs</Built-By>
                </manifestEntries>
              </archive>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Copy documentation resources into build directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-documentation-resources</id>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <phase>generate-resources</phase>
            <configuration>
              <outputDirectory>${project.build.directory}/documentation/</outputDirectory>
              <resources>
                <resource>
                  <directory>src/main/resources/org/nypl/simplified/documentation/</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Produce documentation -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <id>make-documentation-single</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>org.nypl.simplified.documentation.MakeDocumentation</mainClass>
              <arguments>
                <argument>--xhtml-single</argument>
                <argument>${project.build.directory}/documentation/documentation.xml</argument>
                <argument>${project.build.directory}/documentation/</argument>
                <argument>--xhtml-body-start</argument>
                <argument>${project.build.directory}/documentation/brand.xml</argument>
              </arguments>
            </configuration>
          </execution>
          <execution>
            <id>make-documentation-multi</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>org.nypl.simplified.documentation.MakeDocumentation</mainClass>
              <arguments>
                <argument>--xhtml-multi</argument>
                <argument>${project.build.directory}/documentation/documentation.xml</argument>
                <argument>${project.build.directory}/documentation/</argument>
                <argument>--xhtml-body-start</argument>
                <argument>${project.build.directory}/documentation/brand.xml</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Javadoc handling -->
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
        <executions>
          <!-- Produce javadoc jar for Central -->
          <execution>
            <id>attach-javadocs</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <bottom><![CDATA[Copyright &#169; {currentYear} &lt;NYPL Labs&gt; http://labs.nypl.org]]></bottom>
              <archive>
                <manifestEntries>
                  <Specification-Title>${project.name}</Specification-Title>
                  <Specification-Version>${project.version}</Specification-Version>
                  <Specification-Vendor>NYPL Labs</Specification-Vendor>
                  <Implementation-Title>${project.name}</Implementation-Title>
                  <Implementation-Version>${project.version}</Implementation-Version>
                  <Implementation-Vendor>NYPL Labs</Implementation-Vendor>
                  <Implementation-Vendor-Id>${project.groupId}</Implementation-Vendor-Id>
                  <Built-By>NYPL Labs</Built-By>
                </manifestEntries>
              </archive>
            </configuration>
          </execution>
          <!-- Produce aggregate dependency javadocs -->
          <execution>
            <id>javadoc-aggregate</id>
            <phase>package</phase>
            <goals>
              <goal>javadoc</goal>
            </goals>
            <configuration>
              <bottom><![CDATA[Copyright &#169; {currentYear} &lt;NYPL Labs&gt; http://labs.nypl.org]]></bottom>
              <outputDirectory>${project.build.directory}/apidocs</outputDirectory>
              <includeDependencySources>true</includeDependencySources>
              <includeTransitiveDependencySources>true</includeTransitiveDependencySources>
              <dependencySourceIncludes>
                <dependencySourceSet>org.nypl.simplified*</dependencySourceSet>
              </dependencySourceIncludes>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Produce documentation archive -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.5.5</version>
        <configuration>
          <descriptors>
            <descriptor>src/main/assembly/documentation.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <appendAssemblyId>false</appendAssemblyId>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Unpack the documentation archive to the parent's generated site staging directory. -->
      <!-- This is arguably abusive, but there appears to be no other way to achieve it. -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>truezip-maven-plugin</artifactId>
        <version>1.2</version>
        <inherited>false</inherited>
        <executions>
          <execution>
            <id>copy-site-documentation</id>
            <goals>
              <goal>copy</goal>
            </goals>
            <phase>site</phase>
            <configuration>
              <verbose>true</verbose>
              <fileset>
                <directory>${project.build.directory}/${project.name}-${project.version}.zip/${project.name}-${project.version}/</directory>
                <outputDirectory>${project.parent.build.directory}/staging/documentation/</outputDirectory>
              </fileset>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
